TODO

tests:
- login as user to publish question
- error if non logged in user tries to publish question
- create user who is expert and answer a question, that question should be marked as has answer by expert
- create normal user who answers question and that question should be marked a has *no* answer by expert
- check publishing answers and questions that trigger spam filters and that don't trigger spam filters
- voting up and down, and check only logged in users can do it

- document using RST, see scoops book

- Management commands to assign users to questions and answers and change categories for questions.
** keep adding tests as I go **
link for edit question for user who published and for admin
** keep adding tests as I go **
view for publishing question
** keep adding tests as I go **
view for answering question
vote for answer (ajax?, time to read Django and Ajax book?)
vote for question (ajax?)
should I use memcached or go directly to redis for my cache?
enable cache and put sessions in cache (memcached to start), read https://docs.djangoproject.com/en/dev/topics/http/sessions/?from=olddocs/
use redis for sessions and something else?

-----

Long polling: http://www.quora.com/How-do-you-push-messages-back-to-a-web-browser-client-through-AJAX-Is-there-any-way-to-do-this-without-having-the-client-constantly-polling-the-server-for-updates

